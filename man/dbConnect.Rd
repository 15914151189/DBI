% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DBDriver.R, R/DBConnection.R
\name{dbConnect}
\alias{dbConnect}
\alias{dbDisconnect}
\title{Create a connection to a DBMS}
\usage{
dbConnect(drv, ...)

dbDisconnect(conn, ...)
}
\arguments{
\item{drv}{an object that inherits from \code{\linkS4class{DBIDriver}},
or an existing \code{\linkS4class{DBIConnection}}
object (in order to clone an existing connection).}

\item{...}{authorization arguments needed by the DBMS instance; these
typically include \code{user}, \code{password}, \code{dbname}, \code{host},
\code{port}, etc.  For details see the appropriate \code{DBIDriver}.}

\item{conn}{A \code{\linkS4class{DBIConnection}} object, as returned by
\code{dbConnect()}.}
}
\value{
For \code{dbConnect()}, an object that extends
\code{\linkS4class{DBIConnection}} in a database-specific manner.
For instance \code{dbConnect(RMySQL::MySQL())} produces
an object of class \code{MySQLConnection}. This object is used to direct
commands to the database engine.

\code{TRUE} for \code{dbDisconnect()}.
}
\description{
\code{dbConnect()} connects to a DBMS going through the appropriate authorization
procedure.
Some implementations may allow you to have multiple connections open, so you
may invoke this function repeatedly assigning its output to different
objects. The authorization mechanism is left unspecified, so check the
documentation of individual drivers for details.

\code{dbDisconnect()} closes the connection, discards all pending work, and frees
resources (e.g., memory, sockets).
}
\details{
Each driver will define what other arguments to \code{dbConnect()} are required,
e.g., \code{"dbname"} for the database name, \code{"username"}, and \code{"password"}.
}
\section{Specification}{


Can connect and disconnect, connection object inherits from
"DBIConnection".
Repeated disconnect throws warning.

}

\examples{
# SQLite only needs a path to the database. Other database drivers
# will require more details (like username, password, host, port etc)
con <- dbConnect(RSQLite::SQLite(), ":memory:")
con

dbListTables(con)

dbDisconnect(con)
}
\seealso{
Other DBIDriver generics: \code{\link{DBIDriver-class}},
  \code{\link{dbDataType}}, \code{\link{dbDriver}},
  \code{\link{dbGetInfo}}, \code{\link{dbIsValid}},
  \code{\link{dbListConnections}}

Other DBIConnection generics: \code{\link{DBIConnection-class}},
  \code{\link{dbDataType}}, \code{\link{dbExecute}},
  \code{\link{dbExistsTable}},
  \code{\link{dbGetException}}, \code{\link{dbGetInfo}},
  \code{\link{dbGetQuery}}, \code{\link{dbIsValid}},
  \code{\link{dbListFields}}, \code{\link{dbListResults}},
  \code{\link{dbListTables}}, \code{\link{dbReadTable}},
  \code{\link{dbRemoveTable}}, \code{\link{dbSendQuery}},
  \code{\link{dbSendStatement}}
}
