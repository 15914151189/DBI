% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s4.R
\name{setDBIMethod}
\alias{setDBIMethod}
\title{Define an implementation for a DBI generic}
\usage{
setDBIMethod(f, signature = character(), definition,
  where = topenv(parent.frame()), valueClass, sealed)
}
\arguments{
\item{f}{ The character-string name of the generic function. The unquoted name usually works as well (evaluating to the generic function), except for a few functions in the base package.}

\item{signature}{ The classes required for some of the arguments. Most applications just require one or two character strings matching the first argument(s) in the signature. More complicated cases follow R's rule for argument matching. See the details below; however, if the signature is not trivial, you should use \code{\link{method.skeleton}} to generate a valid call to \code{setMethod}.}

\item{definition}{ A function definition, which will become the method
    called when the arguments in a call to \code{f} match the
    classes in \code{signature}, directly or through inheritance.
    The definition must be a function with the same formal arguments
    as the generic; however, \code{setMethod()} will handle methods
    that add arguments, if \code{\dots} is a formal argument to the generic.
  See the Details section.
  }

\item{where, valueClass}{.}

\item{sealed}{\emph{These arguments are allowed
        but either obsolete or rarely appropriate.}

      \code{where}: where to store the definition; should be the
      default, the namespace for the package.

  \code{valueClass}{ Obsolete. }

  \code{sealed}{ prevents the method being redefined, but should never
    be needed when the method is defined in the source code of a
    package.}
}
}
\description{
This function is intended as a drop-in replacement for \code{\link[=setMethod]{setMethod()}}.
DBI backends should declare their methods with \code{setDBIMethod()} instead of
\code{setMethod()} to simplify future extensions to the DBI package.
}
\details{
To use in a package that creates its documentation with \pkg{roxygen2},
set \code{setMethod} as an alias to \code{setDBIMethod}.
Make sure to define this method in a file that is sourced early on,
use \code{aaa.R} as filename or use \code{@include} to make sure it appears early
in the collate sequence.
}
\examples{
if (FALSE) {
  # Simple usage
  setDBIMethod("dbConnect", signature("KazamDriver"), function(drv, ...) {
     ...
  })

  # Usage in a package maintained by roxygen2
  setMethod <- DBI::setDBIMethod
  setMethod("dbConnect", signature("KazamDriver"), function(drv, ...) {
     ...
  })
}
}
